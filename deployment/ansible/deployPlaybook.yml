---
- hosts: django_server
  become: true  # Assuming privilege escalation required
  gather_facts: true  # Disable fact gathering

  tasks:
    - name: Update package repositories (adjust based on your distro)
      apt:  # Replace with yum or dnf for other distributions
        update_cache: yes

    # - name: Upgrade all packages
    #   apt:  # Replace with yum or dnf for other distributions
    #     upgrade: yes
    #     force_apt_lock: yes  # Optional: Avoid dependency conflicts

    # - name: Ensure Docker is installed
    #   apt:  # Replace with yum or dnf for other distributions
    #     name: docker.io
    #     state: present


    - name: Install curl package (if missing)
      apt:
        name: curl
        state: present

    - name: Import Docker GPG key
      command: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
        state: present

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600  # Optional: Cache updates for 1 hour


    - name: Create erpnetwork (if it doesn't exist)
      docker_network:
        name: erpnetwork
        state: present

    # - name: Remove image
    #   community.docker.docker_image:
    #     state: absent
    #     name: registry.ansible.com/chouseknecht/sinatra
    #     tag: v1

    # - name: ensure a container is running
    #   docker_container:
    #     name: django-erp
    #     state: started
    #     image: "gitauwairimu/djangoscherp-dev:$GITHUB_RUN_ID"
    #     pull: true
    #     ports:
    #       - "80:8000"

    - name: Build dynamic image tag
      set_fact:
        image_tag: "gitauwairimu/djangoscherp-dev:{{ github.run_id }}"  # Build tag using Jinja2

    - name: Ensure container is running
      docker_container:
        name: django-erp
        image: "{{ image_tag }}"  # Use the constructed image_tag variable
        # Other container configuration options...
        pull: true
        ports:
          - "80:8000"

    # - name: Stop and remove djangoscherp-dev containers
    #   docker_container:
    #     state: absent
    #     force: yes  # Forcefully stop container before removal (optional)
    #     filters:
    #       image: "{{ 'gitauwairimu/djangoscherp-dev:*' }}"

    # - name: Remove images starting with 'gitauwairimu/djangoscherp-dev'
    #   docker_image:
    #     name: "{{ image.name }}"
    #     state: absent
    #     loop: "{{ docker_images.results }}"
    #     when: image.name.startswith("gitauwairimu/djangoscherp-dev")

    # - name: Run djangoscherp-dev container
    #   docker_container:
    #     name: django-erp
    #     image: gitauwairimu/djangoscherp-dev:$GITHUB_RUN_ID
    #     ports:
    #       - container_port: 8000

    # - name: Run djangoscherp-dev container
    #   docker_container:
    #     name: django-erp
    #     image: gitauwairimu/djangoscherp-dev:$GITHUB_RUN_ID
    #     ports:
    #       - container_port: 8000
