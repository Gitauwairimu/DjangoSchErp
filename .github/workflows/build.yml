name: Django Build and Push Image

on:
  push:
    branches: [ s3 ] # Trigger on pushes to master branch

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Access secrets
  #       run: |
  #         DEBUG=${{ secrets.DEBUG }}
  #         SECRET_KEY=${{ secrets.SECRET_KEY }}
  #         AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}
  #         # ... access other secrets

  #     - name: Collectstatic
  #       run: |
  #         pip install -r requirements.txt
  #         python manage.py collectstatic --noinput

  #     - name: Build Docker image
  #       run: |
  #         docker build -t django-img .
  #         docker tag django-img gitauwairimu/djangoscherp-dev:$GITHUB_RUN_ID

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_DJANGOSCHERP_DEV_TOKEN }}

  #     - name: Push Docker image
  #       run: |
  #         docker push gitauwairimu/djangoscherp-dev:$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
    steps:
      - uses: actions/checkout@v3

      - name: Add SSH key
        run: |
          echo "${{ secrets.PEM_KEY }}" >> /home/runner/work/DjangoSchErp/DjangoSchErp/termapp.pem
          chmod 600 /home/runner/work/DjangoSchErp/DjangoSchErp/termapp.pem  # Set appropriate permissions          

      - name: Install Ansible
        run: |
          sudo apt install ansible -y  # Install Ansible (replace with yum or dnf for other distributions)

      - name: Setup ssh
        shell: bash
        run: |
          service ssh status
          eval `ssh-agent -s`

      - name: Copy ansible.cfg
        shell: bash
        run: |
          cp /home/runner/work/DjangoSchErp/DjangoSchErp/deployment/ansible/ansible.cfg /tmp/ansible.cfg

      - name: Run Ansible playbook
        uses: saubermacherag/ansible-playbook-docker-action@v1.4
        with:
          playbookName: '/home/runner/work/DjangoSchErp/DjangoSchErp/deployment/ansible/deployPlaybook.yml'
          inventoryFile: '/tmp/inventory'
          keyFile: "/home/runner/work/DjangoSchErp/DjangoSchErp/termapp.pem"
          verbosity: "vv"

      - name: Run Ansible playbook
        uses: dawidd6/action-ansible-playbook@v2.5.0
        with:
          playbook: deployment/ansible/deployPlaybook.yml # path to your Ansible playbook
          directory: ./
          key: ${{ secrets.PEM_KEY }} # the ssh private key for ansible to use to connect to the servers, stored as "ansible_ssh_private_key" in the GitHub secrets
          inventory: deployment/ansible/inventory
          # inventory: ${{ secrets.ansible_inventory }} # the ansible inventory to use, stored as "ansible_inventory" in the GitHub secrets



      - name: Execute Ansible Playbook
        run: |
          #ssh-copy-id -i /home/runner/work/DjangoSchErp/DjangoSchErp/termapp.pem ubuntu@18.208.157.80
          ansible-playbook -i /home/runner/work/DjangoSchErp/DjangoSchErp/deployment/ansible/inventory deployment/ansible/deployPlaybook.yml


